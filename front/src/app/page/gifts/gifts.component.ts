import { MessageBoxType } from './../../component/message-box/message-box.component';
import { Component, ViewChild } from '@angular/core';
import { Gift, Present } from '../../autogenerated/back-map';
import { WeddingService } from '../../service/wedding.service';
import { ModalDirective } from '../../directive/modal.directive';
import { MercadoPagoCheckoutProComponent } from '../../component/mercado-pago-checkout-pro/mercado-pago-checkout-pro.component';
import { ModalService } from '../../component/modal/modal.service';
import { GiftResumeComponent } from './gift-resume/gift-resume.component';

@Component({
  selector: 'app-gifts',
  templateUrl: './gifts.component.html',
  styleUrl: './gifts.component.scss'
})
export class GiftsComponent {

  presents: Present[] = [];

  constructor(
    private weddingService: WeddingService,
    private modalService: ModalService,
  ) { }

  ngOnInit(): void {
    this.weddingService.getAllAvailableGifts().subscribe(presents => {
      this.presents = presents;
    })
  }

  openResume(selectedPresent: Present) {
    this.modalService.openMessageBox({
      message: "Ainda não terminamos o sistema de pagamentos. Logo estará tudo pronto.",
      title: "Aguardem",
      type: MessageBoxType.INFO,
    })
  }

  openResumeReal(selectedPresent: Present) {
    this.modalService.open(GiftResumeComponent, {
      present: selectedPresent
    }).afterClosed.subscribe((gift: Gift) => { 
      if (gift) {
        this.weddingService.gift(gift).subscribe(response => {
          if (response.preferenceId) {
            this.modalService.open(MercadoPagoCheckoutProComponent, {
              preferenceId: response.preferenceId
            });
          }
        });
      }
    });
  }

}
